import java.util.List;

public static int lowerBound(List<Integer> list, int target) {
    int left = 0;
    int right = list.size();

    while (left < right) {
        int mid = left + (right - left) / 2;
        if (list.get(mid) < target) {
            left = mid + 1;
        } else {
            right = mid;
        }
    }

    return left;
}

import java.util.List;

public static int upperBound(List<Integer> list, int target) {
    int left = 0;
    int right = list.size();

    while (left < right) {
        int mid = left + (right - left) / 2;
        if (list.get(mid) <= target) {
            left = mid + 1;
        } else {
            right = mid;
        }
    }

    return left;
}
