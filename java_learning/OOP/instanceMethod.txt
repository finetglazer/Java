As u learned, methods represent the behavior of obj
There are two method + static
                     + instance
Now learn the instance(static learned before)
1. different of two
    Let see:
            public static void printStatic() {
            System.out.println("It's a static method");
        }

        public void printInstance() {
            System.out.println("It's an instance method");
        }

        Have static is static, vice versa.
2. Understand two
    static: u can invoke that without initialize a obj
        Human.printStatic(); // will print "It's a static method"
    instance: vice versa
            Human peter =  new Human();
            peter.printInstance(); // will print "It's an instance method"

            Human alice =  new Human();
            alice.printInstance(); // will print "It's an instance method"
    -> instance is method belong to each obj we created.
3. Feature
    Ex:
        class Human {
        String name;
        int age;

        public static void averageWorking() {
            System.out.println("An average human works 40 hours per week.");
        }

        public void work() {
            System.out.println(this.name + " loves working!");
        }

        public void workTogetherWith(Human other) {
            System.out.println(this.name + " loves working with " + other.name + '!');
        }
    }
    public static void main(String[] args) {
            
        Human.averageWorking(); // "An average human works 40 hours per week."

        Human peter =  new Human();
        peter.name = "Peter";
        peter.work(); // "Peter loves working!"

            
        Human alice =  new Human();
        alice.name = "Alice";
        alice.work(); // "Alice loves working!"

        peter.workTogetherWith(alice); // "Peter loves working with Alice!"
    }
    the instance methods is lucrative coz they represent the specific. 
    if u use static, every obj is the same and the keyword this also is the factor 
    make the distinction.
   
